/*! ng-store 2014-08-25 */
"use strict";

var AngularFireCart = angular.module("AngularFireCart", [ "ngRoute", "ngAnimate", "cartModule", "firebase" ]).value("fbURL", "https://ng-store.firebaseio.com/");

AngularFireCart.config([ "$routeProvider", function($routeProvider) {
    $routeProvider.when("/", {
        templateUrl: "app/views/products.html",
        controller: "ProductsCtrl"
    }).when("/products/:sku", {
        templateUrl: "app/views/product-details.html",
        controller: "ProductCtrl"
    }).when("/categories/:slug", {
        templateUrl: "app/views/category-products.html",
        controller: "CategoryCtrl"
    }).when("/sale", {
        templateUrl: "app/views/on-sale.html",
        controller: "ProductsCtrl"
    }).when("/cart", {
        templateUrl: "app/views/cart.html",
        controller: "CartCtrl"
    }).when("/checkout", {
        templateUrl: "app/views/checkout.html",
        controller: "CheckoutCtrl"
    }).when("/thank-you", {
        templateUrl: "app/views/reciept.html",
        controller: "CheckoutCtrl"
    }).otherwise({
        template: "404 : OOPS!"
    });
} ]), AngularFireCart.controller("CartCtrl", [ "$scope", "cart", function($scope, cart) {
    $scope.add = cart.$add, $scope.remove = cart.$remove, $scope.emptyCart = cart.$clearAll;
} ]), AngularFireCart.controller("CategoriesCtrl", [ "$scope", "categories", function($scope, categories) {
    $scope.categories = categories.$asArray();
} ]), AngularFireCart.controller("CategoryCtrl", [ "$scope", "$routeParams", "categories", "products", function($scope, $routeParams, categories, products) {
    $scope.categories = categories.$asArray(), $scope.products = products.$asArray(), 
    $scope.slug = $routeParams.slug;
} ]), AngularFireCart.controller("CheckoutCtrl", [ "$scope", "$location", "cart", "checkout", "order", function($scope, $location, cart, checkout, order) {
    $scope.orders = checkout.orders.$asArray(), $scope.customers = checkout.customers.$asArray(), 
    $scope.error = "", $scope.tax = .1 * $scope.subTotal, $scope.shipping = 0, $scope.grandTotal = $scope.subTotal + $scope.shipping + $scope.tax;
    var items = angular.copy($scope.items);
    $scope.order = order;
    var format$ = function(input) {
        return parseFloat(parseInt(100 * input) / 100);
    };
    order.confirmationNumber || $location.path("/checkout"), $scope.placeOrder = function() {
        $scope.orderFrom.$valid ? ($scope.customer.customerSince = Firebase.ServerValue.TIMESTAMP, 
        $scope.customers.$add($scope.customer).then(function(ref) {
            $scope.orders.$add({
                customer: ref.name(),
                items: items,
                subTotal: format$($scope.subTotal),
                tax: format$($scope.tax),
                shipping: format$($scope.shipping),
                grandTotal: format$($scope.grandTotal),
                status: "New",
                orderDate: Firebase.ServerValue.TIMESTAMP
            }).then(function(ref) {
                cart.$clearAll(), $scope.order.confirmationNumber = ref.name(), $location.path("/thank-you");
            });
        }, function(ref) {
            $scope.error = "Customer was added but Order failed :( " + ref.name(), $scope.customers.$remove(ref.name());
        })) : $scope.error = "We need some valid shipping information";
    }, $scope.prefillValid = function() {
        $scope.customer = {
            name: "Norik Davtian " + Math.floor(100 * Math.random() + 1),
            email: "norik" + Math.floor(100 * Math.random() + 1) + "@bigemployee.com",
            address: Math.floor(150 * Math.random() + 1) + " Main Street",
            unit: "" + Math.floor(10 * Math.random() + 1),
            city: "Los Angeles",
            state: "CA",
            zip: "90" + Math.floor(1e3 * Math.random() + 1),
            payment: {
                name: "Norik",
                last: "Davtian",
                ccNo: "42" + Math.floor(1e5 * Math.random() + 1) + "42" + Math.floor(1e5 * Math.random() + 1),
                ccExpMonth: "9",
                ccExpYear: "2016",
                ccCCV: "" + Math.floor(1e3 * Math.random() + 1)
            }
        };
    }, $scope.prefillInvalid = function() {
        $scope.customer = {
            name: "John Doe",
            email: "Invalid email"
        };
    };
} ]), AngularFireCart.controller("ProductCtrl", [ "$scope", "$firebase", "$routeParams", "productPath", "cart", function($scope, $firebase, $routeParams, productPath, cart) {
    var productURL = new Firebase(productPath + $routeParams.sku), product = $firebase(productURL);
    $scope.product = product.$asObject(), $scope.add = cart.$add;
} ]), AngularFireCart.controller("ProductsCtrl", [ "$scope", "products", function($scope, products) {
    $scope.products = products.$asArray();
} ]), AngularFireCart.directive("cartEmpty", function() {
    return {
        restrict: "C",
        template: "You can do this <b>:)</b><br/>Let's add some items here."
    };
}), AngularFireCart.directive("alertDanger", function() {
    return {
        restrict: "C",
        template: "<strong>Yeh before processing that!</strong> {{error}}"
    };
}), AngularFireCart.directive("simpleCart", function() {
    return {
        link: function(scope, simpleCart) {
            simpleCart = jQuery(simpleCart);
            var cartContent = simpleCart.find("#cart-content");
            simpleCart.on("mouseenter", function(e) {
                e.preventDefault(), cartContent.stop().fadeIn(200);
            }).on("mouseleave", function(e) {
                e.preventDefault(), cartContent.stop().fadeOut(200);
            });
        },
        templateUrl: "app/views/simple-cart.html"
    };
}), AngularFireCart.directive("uppercase", function() {
    return {
        require: "^ngModel",
        link: function(scope, element, attrs, modelCtrl) {
            var uppercase = function(input) {
                void 0 == input && (input = "");
                var uppercased = input.toUpperCase();
                return uppercased !== input && (modelCtrl.$setViewValue(uppercased), modelCtrl.$render()), 
                uppercased;
            };
            modelCtrl.$parsers.push(uppercase), uppercase(scope[attrs.ngModel]);
        }
    };
});

var angularCart = angular.module("cartModule", [ "LocalStorageModule" ]);

angularCart.factory("cart", [ "$rootScope", "$filter", "localStorageService", function($rootScope, $filter, localStorageService) {
    function cartItem(sku, title, image, price, quantity) {
        this.sku = sku, this.title = title, this.image = image, this.price = parseFloat(price), 
        this.quantity = parseInt(quantity);
    }
    var that = $rootScope;
    that.itemsCount = parseInt(localStorageService.get("itemsCount")) || localStorageService.set("itemsCount", 0) && 0, 
    that.subTotal = parseFloat(localStorageService.get("subTotal")) || localStorageService.set("subTotal", 0) && 0, 
    that.items = localStorageService.get("cart") || localStorageService.set("cart", []) && [];
    var checkCart = $filter("filter"), addItem = function(product, quantity) {
        var newItem = new cartItem(product.sku, product.title, product.image, product.price, quantity), item = checkCart(that.items, {
            sku: product.sku
        }), isInCart = item.length;
        if (isInCart) {
            var newQuantity = item[0].quantity + quantity;
            newQuantity && (item[0].quantity = newQuantity, updateCart(quantity, product.price));
        } else that.items.push(newItem), updateCart(quantity, product.price);
    }, updateCart = function(quantity, price) {
        setItemsCount(that.itemsCount + quantity), setSubTotal(that.subTotal + quantity * price), 
        localStorageService.set("cart", that.items);
    }, getItems = function() {
        var items = localStorageService.get("cart");
        return items;
    }, removeItem = function(item) {
        var index = that.items.indexOf(item);
        that.items.splice(index, 1), updateCart(-item.quantity, item.price);
    }, clearAll = function() {
        localStorageService.clearAll(), that.itemsCount = localStorageService.set("itemsCount", 0) && 0, 
        that.subTotal = localStorageService.set("subTotal", 0) && 0, that.items = localStorageService.set("cart", []) && [];
    }, setItemsCount = function(itemsCount) {
        localStorageService.set("itemsCount", itemsCount), that.itemsCount = itemsCount;
    }, getItemsCount = function() {
        var itemsCount = parseInt(localStorageService.get("itemsCount"));
        return itemsCount;
    }, setSubTotal = function(subTotal) {
        localStorageService.set("subTotal", subTotal), that.subTotal = subTotal;
    }, getSubTotal = function() {
        return that.subTotal;
    };
    return {
        $add: addItem,
        $items: getItems,
        $remove: removeItem,
        $clearAll: clearAll,
        $itemsCount: getItemsCount,
        $subTotal: getSubTotal
    };
} ]), AngularFireCart.factory("categories", [ "$firebase", "fbURL", function($firebase, fbURL) {
    var firebaseURL = new Firebase(fbURL + "/categories"), categories = $firebase(firebaseURL);
    return categories;
} ]), AngularFireCart.factory("checkout", [ "$firebase", "fbURL", function($firebase, fbURL) {
    var checkout = {}, firebaseOrdersURL = new Firebase(fbURL + "/orders"), firebaseCustomersURL = new Firebase(fbURL + "/customers");
    return checkout.orders = $firebase(firebaseOrdersURL), checkout.customers = $firebase(firebaseCustomersURL), 
    checkout;
} ]), AngularFireCart.factory("order", function() {
    return {
        confirmationNumber: ""
    };
}), AngularFireCart.factory("productPath", [ "fbURL", function(fbURL) {
    var firebasePath = fbURL + "/products/";
    return firebasePath;
} ]), AngularFireCart.factory("products", [ "$firebase", "fbURL", function($firebase, fbURL) {
    var firebaseURL = new Firebase(fbURL + "/products"), products = $firebase(firebaseURL);
    return products;
} ]);